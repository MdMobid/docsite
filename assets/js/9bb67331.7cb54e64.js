"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[836],{5106:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>h,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"github/orphan-branch","title":"Create Orphan Branch","description":"This guide will show you how to create a new, empty Git branch (called an orphan branch) that has no history from your current branch. This is useful for things like deploying to GitHub Pages (gh-pages), maintaining documentation, or creating a fresh start.","source":"@site/docs/github/orphan-branch.md","sourceDirName":"github","slug":"/github/orphan-branch","permalink":"/docsite/docs/github/orphan-branch","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"githubSidebar","previous":{"title":"Make Verified Commits","permalink":"/docsite/docs/github/verified_commits"}}');var t=r(4848),a=r(8453);const o={sidebar_position:5},s="Create Orphan Branch",h={},c=[{value:"\ud83e\udde0 What is an Orphan Branch?",id:"-what-is-an-orphan-branch",level:2},{value:"\u2705 Step-by-Step Instructions",id:"-step-by-step-instructions",level:2},{value:"1. Open your terminal and navigate to your project folder.",id:"1-open-your-terminal-and-navigate-to-your-project-folder",level:3},{value:"2. Create a new orphan branch",id:"2-create-a-new-orphan-branch",level:3},{value:"3. (Optional) Delete all existing files from the working directory",id:"3-optional-delete-all-existing-files-from-the-working-directory",level:3},{value:"4. Make an initial commit",id:"4-make-an-initial-commit",level:3},{value:"5. Push the branch to GitHub (or other remote)",id:"5-push-the-branch-to-github-or-other-remote",level:3},{value:"\ud83e\uddfc You\u2019re Done!",id:"-youre-done",level:2},{value:"\ud83d\udca1 Tips",id:"-tips",level:2},{value:"\ud83d\udd01 Example: Creating a <code>gh-pages</code> Branch for GitHub Pages",id:"-example-creating-a-gh-pages-branch-for-github-pages",level:2}];function l(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"create-orphan-branch",children:"Create Orphan Branch"})}),"\n",(0,t.jsxs)(n.p,{children:["This guide will show you how to create a ",(0,t.jsx)(n.strong,{children:"new, empty Git branch"})," (called an ",(0,t.jsx)(n.strong,{children:"orphan branch"}),") that has no history from your current branch. This is useful for things like deploying to GitHub Pages (",(0,t.jsx)(n.code,{children:"gh-pages"}),"), maintaining documentation, or creating a fresh start."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-what-is-an-orphan-branch",children:"\ud83e\udde0 What is an Orphan Branch?"}),"\n",(0,t.jsxs)(n.p,{children:["An ",(0,t.jsx)(n.strong,{children:"orphan branch"})," is a new branch that starts with ",(0,t.jsx)(n.strong,{children:"no previous commits or history"}),". It\u2019s like starting with a blank project, even though you're in the same Git repository."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-step-by-step-instructions",children:"\u2705 Step-by-Step Instructions"}),"\n",(0,t.jsx)(n.h3,{id:"1-open-your-terminal-and-navigate-to-your-project-folder",children:"1. Open your terminal and navigate to your project folder."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd your-project-folder\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"2-create-a-new-orphan-branch",children:"2. Create a new orphan branch"}),"\n",(0,t.jsxs)(n.p,{children:["Replace ",(0,t.jsx)(n.code,{children:"new-branch-name"})," with the name you want (for example: ",(0,t.jsx)(n.code,{children:"gh-pages"}),", ",(0,t.jsx)(n.code,{children:"docs"}),", ",(0,t.jsx)(n.code,{children:"clean-start"}),", etc.)"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git switch --orphan new-branch-name\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["\ud83d\udcdd This will switch you to a new branch ",(0,t.jsx)(n.strong,{children:"without"})," any commit history."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"3-optional-delete-all-existing-files-from-the-working-directory",children:"3. (Optional) Delete all existing files from the working directory"}),"\n",(0,t.jsx)(n.p,{children:"You may still see your old files. If you want to start fresh, remove them:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git rm -rf .\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["\u26a0\ufe0f This only removes files from the orphan branch, ",(0,t.jsx)(n.strong,{children:"not"})," your main branch."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"4-make-an-initial-commit",children:"4. Make an initial commit"}),"\n",(0,t.jsx)(n.p,{children:"Create an empty first commit to initialize the branch:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'git commit --allow-empty -m "Initial commit"\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"5-push-the-branch-to-github-or-other-remote",children:"5. Push the branch to GitHub (or other remote)"}),"\n",(0,t.jsxs)(n.p,{children:["Replace ",(0,t.jsx)(n.code,{children:"origin"})," with your remote name (default is usually ",(0,t.jsx)(n.code,{children:"origin"}),") and ",(0,t.jsx)(n.code,{children:"new-branch-name"})," with your branch name."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git push -u origin new-branch-name\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"\ud83d\ude80 This pushes your new branch and sets it to track the remote version."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-youre-done",children:"\ud83e\uddfc You\u2019re Done!"}),"\n",(0,t.jsx)(n.p,{children:"You now have a clean branch with no history, ready for whatever purpose you need \u2014 like documentation, a demo site, or a different version of your project."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-tips",children:"\ud83d\udca1 Tips"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Switch back to your main branch anytime with:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git switch main\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"List all branches (local and remote):"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git branch -a\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h2,{id:"-example-creating-a-gh-pages-branch-for-github-pages",children:["\ud83d\udd01 Example: Creating a ",(0,t.jsx)(n.code,{children:"gh-pages"})," Branch for GitHub Pages"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'git switch --orphan gh-pages\ngit rm -rf .\ngit commit --allow-empty -m "Initial commit"\ngit push -u origin gh-pages\n'})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"You can now add your static site files and push again to publish."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:"Happy coding! \ud83c\udf89"})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>s});var i=r(6540);const t={},a=i.createContext(t);function o(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);